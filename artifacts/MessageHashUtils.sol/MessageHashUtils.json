{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ba9f2ef74c323a2bdf13486c9b63cec29aeda12aeb9a98554d3d48e1fa91305d64736f6c63430008150033","sourceMap":"521:3181:116:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ba9f2ef74c323a2bdf13486c9b63cec29aeda12aeb9a98554d3d48e1fa91305d64736f6c63430008150033","sourceMap":"521:3181:116:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/metamorpho/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":metamorpho-test/=lib/metamorpho/test/forge/\",\":metamorpho/=lib/metamorpho/src/\",\":morpho-blue/=lib/metamorpho/lib/morpho-blue/src/\",\":murky/=lib/metamorpho/lib/universal-rewards-distributor/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/metamorpho/lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/\",\":universal-rewards-distributor/=lib/metamorpho/lib/universal-rewards-distributor/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/metamorpho/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","metamorpho-test/=lib/metamorpho/test/forge/","metamorpho/=lib/metamorpho/src/","morpho-blue/=lib/metamorpho/lib/morpho-blue/src/","murky/=lib/metamorpho/lib/universal-rewards-distributor/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/metamorpho/lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/","universal-rewards-distributor/=lib/metamorpho/lib/universal-rewards-distributor/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c","urls":["bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251","dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":103405,"exportedSymbols":{"MessageHashUtils":[103404],"Strings":[102755]},"nodeType":"SourceUnit","src":"123:3580:116","nodes":[{"id":103332,"nodeType":"PragmaDirective","src":"123:24:116","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":103334,"nodeType":"ImportDirective","src":"149:39:116","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":103405,"sourceUnit":102756,"symbolAliases":[{"foreign":{"id":103333,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102755,"src":"157:7:116","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":103404,"nodeType":"ContractDefinition","src":"521:3181:116","nodes":[{"id":103345,"nodeType":"FunctionDefinition","src":"1222:433:116","nodes":[],"body":{"id":103344,"nodeType":"Block","src":"1314:341:116","nodes":[],"statements":[{"AST":{"nativeSrc":"1349:300:116","nodeType":"YulBlock","src":"1349:300:116","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:116","nodeType":"YulLiteral","src":"1370:4:116","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:116","nodeType":"YulLiteral","src":"1376:34:116","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:116","nodeType":"YulIdentifier","src":"1363:6:116"},"nativeSrc":"1363:48:116","nodeType":"YulFunctionCall","src":"1363:48:116"},"nativeSrc":"1363:48:116","nodeType":"YulExpressionStatement","src":"1363:48:116"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:116","nodeType":"YulLiteral","src":"1472:4:116","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:116","nodeType":"YulIdentifier","src":"1478:11:116"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:116","nodeType":"YulIdentifier","src":"1465:6:116"},"nativeSrc":"1465:25:116","nodeType":"YulFunctionCall","src":"1465:25:116"},"nativeSrc":"1465:25:116","nodeType":"YulExpressionStatement","src":"1465:25:116"},{"nativeSrc":"1544:31:116","nodeType":"YulAssignment","src":"1544:31:116","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:116","nodeType":"YulLiteral","src":"1564:4:116","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:116","nodeType":"YulLiteral","src":"1570:4:116","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:116","nodeType":"YulIdentifier","src":"1554:9:116"},"nativeSrc":"1554:21:116","nodeType":"YulFunctionCall","src":"1554:21:116"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:116","nodeType":"YulIdentifier","src":"1544:6:116"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":103341,"isOffset":false,"isSlot":false,"src":"1544:6:116","valueSize":1},{"declaration":103338,"isOffset":false,"isSlot":false,"src":"1478:11:116","valueSize":1}],"flags":["memory-safe"],"id":103343,"nodeType":"InlineAssembly","src":"1324:325:116"}]},"documentation":{"id":103336,"nodeType":"StructuredDocumentation","src":"552:665:116","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:116","parameters":{"id":103339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103338,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:116","nodeType":"VariableDeclaration","scope":103345,"src":"1254:19:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103337,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:116"},"returnParameters":{"id":103342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103341,"mutability":"mutable","name":"digest","nameLocation":"1306:6:116","nodeType":"VariableDeclaration","scope":103345,"src":"1298:14:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:116"},"scope":103404,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":103371,"nodeType":"FunctionDefinition","src":"2121:229:116","nodes":[],"body":{"id":103370,"nodeType":"Block","src":"2207:143:116","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":103357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:116","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":103362,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103348,"src":"2316:7:116","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":103363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:116","memberName":"length","nodeType":"MemberAccess","src":"2316:14:116","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":103360,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102755,"src":"2299:7:116","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$102755_$","typeString":"type(library Strings)"}},"id":103361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:116","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":101633,"src":"2299:16:116","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":103364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:116","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":103359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:116","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":103358,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:116","typeDescriptions":{}}},"id":103365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:116","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":103366,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103348,"src":"2334:7:116","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":103355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:116","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":103354,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:116","typeDescriptions":{}}},"id":103356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:116","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:116","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":103367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:116","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":103353,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:116","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":103368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:116","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":103352,"id":103369,"nodeType":"Return","src":"2217:126:116"}]},"documentation":{"id":103346,"nodeType":"StructuredDocumentation","src":"1661:455:116","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:116","parameters":{"id":103349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103348,"mutability":"mutable","name":"message","nameLocation":"2166:7:116","nodeType":"VariableDeclaration","scope":103371,"src":"2153:20:116","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103347,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:116","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:116"},"returnParameters":{"id":103352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103371,"src":"2198:7:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103350,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:116"},"scope":103404,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":103391,"nodeType":"FunctionDefinition","src":"2693:191:116","nodes":[],"body":{"id":103390,"nodeType":"Block","src":"2804:80:116","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":103384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:116","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":103385,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103374,"src":"2860:9:116","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":103386,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103376,"src":"2871:4:116","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":103382,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:116","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":103383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:116","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:116","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":103387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:116","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":103381,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:116","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":103388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:116","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":103380,"id":103389,"nodeType":"Return","src":"2814:63:116"}]},"documentation":{"id":103372,"nodeType":"StructuredDocumentation","src":"2356:332:116","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:116","parameters":{"id":103377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103374,"mutability":"mutable","name":"validator","nameLocation":"2742:9:116","nodeType":"VariableDeclaration","scope":103391,"src":"2734:17:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103373,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:116","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103376,"mutability":"mutable","name":"data","nameLocation":"2766:4:116","nodeType":"VariableDeclaration","scope":103391,"src":"2753:17:116","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103375,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:116","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:116"},"returnParameters":{"id":103380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103391,"src":"2795:7:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:116"},"scope":103404,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":103403,"nodeType":"FunctionDefinition","src":"3326:374:116","nodes":[],"body":{"id":103402,"nodeType":"Block","src":"3435:265:116","nodes":[],"statements":[{"AST":{"nativeSrc":"3470:224:116","nodeType":"YulBlock","src":"3470:224:116","statements":[{"nativeSrc":"3484:22:116","nodeType":"YulVariableDeclaration","src":"3484:22:116","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:116","nodeType":"YulLiteral","src":"3501:4:116","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:116","nodeType":"YulIdentifier","src":"3495:5:116"},"nativeSrc":"3495:11:116","nodeType":"YulFunctionCall","src":"3495:11:116"},"variables":[{"name":"ptr","nativeSrc":"3488:3:116","nodeType":"YulTypedName","src":"3488:3:116","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:116","nodeType":"YulIdentifier","src":"3526:3:116"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:116","nodeType":"YulLiteral","src":"3531:10:116","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:116","nodeType":"YulIdentifier","src":"3519:6:116"},"nativeSrc":"3519:23:116","nodeType":"YulFunctionCall","src":"3519:23:116"},"nativeSrc":"3519:23:116","nodeType":"YulExpressionStatement","src":"3519:23:116"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:116","nodeType":"YulIdentifier","src":"3566:3:116"},{"kind":"number","nativeSrc":"3571:4:116","nodeType":"YulLiteral","src":"3571:4:116","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:116","nodeType":"YulIdentifier","src":"3562:3:116"},"nativeSrc":"3562:14:116","nodeType":"YulFunctionCall","src":"3562:14:116"},{"name":"domainSeparator","nativeSrc":"3578:15:116","nodeType":"YulIdentifier","src":"3578:15:116"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:116","nodeType":"YulIdentifier","src":"3555:6:116"},"nativeSrc":"3555:39:116","nodeType":"YulFunctionCall","src":"3555:39:116"},"nativeSrc":"3555:39:116","nodeType":"YulExpressionStatement","src":"3555:39:116"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:116","nodeType":"YulIdentifier","src":"3618:3:116"},{"kind":"number","nativeSrc":"3623:4:116","nodeType":"YulLiteral","src":"3623:4:116","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:116","nodeType":"YulIdentifier","src":"3614:3:116"},"nativeSrc":"3614:14:116","nodeType":"YulFunctionCall","src":"3614:14:116"},{"name":"structHash","nativeSrc":"3630:10:116","nodeType":"YulIdentifier","src":"3630:10:116"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:116","nodeType":"YulIdentifier","src":"3607:6:116"},"nativeSrc":"3607:34:116","nodeType":"YulFunctionCall","src":"3607:34:116"},"nativeSrc":"3607:34:116","nodeType":"YulExpressionStatement","src":"3607:34:116"},{"nativeSrc":"3654:30:116","nodeType":"YulAssignment","src":"3654:30:116","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:116","nodeType":"YulIdentifier","src":"3674:3:116"},{"kind":"number","nativeSrc":"3679:4:116","nodeType":"YulLiteral","src":"3679:4:116","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:116","nodeType":"YulIdentifier","src":"3664:9:116"},"nativeSrc":"3664:20:116","nodeType":"YulFunctionCall","src":"3664:20:116"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:116","nodeType":"YulIdentifier","src":"3654:6:116"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":103399,"isOffset":false,"isSlot":false,"src":"3654:6:116","valueSize":1},{"declaration":103394,"isOffset":false,"isSlot":false,"src":"3578:15:116","valueSize":1},{"declaration":103396,"isOffset":false,"isSlot":false,"src":"3630:10:116","valueSize":1}],"flags":["memory-safe"],"id":103401,"nodeType":"InlineAssembly","src":"3445:249:116"}]},"documentation":{"id":103392,"nodeType":"StructuredDocumentation","src":"2890:431:116","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:116","parameters":{"id":103397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103394,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:116","nodeType":"VariableDeclaration","scope":103403,"src":"3351:23:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103396,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:116","nodeType":"VariableDeclaration","scope":103403,"src":"3376:18:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103395,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:116"},"returnParameters":{"id":103400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103399,"mutability":"mutable","name":"digest","nameLocation":"3427:6:116","nodeType":"VariableDeclaration","scope":103403,"src":"3419:14:116","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:116","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:116"},"scope":103404,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":103335,"nodeType":"StructuredDocumentation","src":"190:330:116","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[103404],"name":"MessageHashUtils","nameLocation":"529:16:116","scope":103405,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":116}