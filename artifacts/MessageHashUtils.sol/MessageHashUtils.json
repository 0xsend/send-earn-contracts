{"abi":[],"bytecode":{"object":"0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ba9f2ef74c323a2bdf13486c9b63cec29aeda12aeb9a98554d3d48e1fa91305d64736f6c63430008150033","sourceMap":"521:3181:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ba9f2ef74c323a2bdf13486c9b63cec29aeda12aeb9a98554d3d48e1fa91305d64736f6c63430008150033","sourceMap":"521:3181:117:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/metamorpho/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":metamorpho-test/=lib/metamorpho/test/forge/\",\":metamorpho/=lib/metamorpho/src/\",\":morpho-blue/=lib/metamorpho/lib/morpho-blue/src/\",\":murky/=lib/metamorpho/lib/universal-rewards-distributor/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/metamorpho/lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/\",\":universal-rewards-distributor/=lib/metamorpho/lib/universal-rewards-distributor/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/metamorpho/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","metamorpho-test/=lib/metamorpho/test/forge/","metamorpho/=lib/metamorpho/src/","morpho-blue/=lib/metamorpho/lib/morpho-blue/src/","murky/=lib/metamorpho/lib/universal-rewards-distributor/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/metamorpho/lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/","universal-rewards-distributor/=lib/metamorpho/lib/universal-rewards-distributor/src/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Strings.sol":{"keccak256":"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c","urls":["bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251","dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol","id":103504,"exportedSymbols":{"MessageHashUtils":[103503],"Strings":[102854]},"nodeType":"SourceUnit","src":"123:3580:117","nodes":[{"id":103431,"nodeType":"PragmaDirective","src":"123:24:117","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":103433,"nodeType":"ImportDirective","src":"149:39:117","nodes":[],"absolutePath":"lib/openzeppelin-contracts/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":103504,"sourceUnit":102855,"symbolAliases":[{"foreign":{"id":103432,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102854,"src":"157:7:117","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":103503,"nodeType":"ContractDefinition","src":"521:3181:117","nodes":[{"id":103444,"nodeType":"FunctionDefinition","src":"1222:433:117","nodes":[],"body":{"id":103443,"nodeType":"Block","src":"1314:341:117","nodes":[],"statements":[{"AST":{"nativeSrc":"1349:300:117","nodeType":"YulBlock","src":"1349:300:117","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:117","nodeType":"YulLiteral","src":"1370:4:117","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:117","nodeType":"YulLiteral","src":"1376:34:117","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:117","nodeType":"YulIdentifier","src":"1363:6:117"},"nativeSrc":"1363:48:117","nodeType":"YulFunctionCall","src":"1363:48:117"},"nativeSrc":"1363:48:117","nodeType":"YulExpressionStatement","src":"1363:48:117"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:117","nodeType":"YulLiteral","src":"1472:4:117","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:117","nodeType":"YulIdentifier","src":"1478:11:117"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:117","nodeType":"YulIdentifier","src":"1465:6:117"},"nativeSrc":"1465:25:117","nodeType":"YulFunctionCall","src":"1465:25:117"},"nativeSrc":"1465:25:117","nodeType":"YulExpressionStatement","src":"1465:25:117"},{"nativeSrc":"1544:31:117","nodeType":"YulAssignment","src":"1544:31:117","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:117","nodeType":"YulLiteral","src":"1564:4:117","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:117","nodeType":"YulLiteral","src":"1570:4:117","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:117","nodeType":"YulIdentifier","src":"1554:9:117"},"nativeSrc":"1554:21:117","nodeType":"YulFunctionCall","src":"1554:21:117"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:117","nodeType":"YulIdentifier","src":"1544:6:117"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":103440,"isOffset":false,"isSlot":false,"src":"1544:6:117","valueSize":1},{"declaration":103437,"isOffset":false,"isSlot":false,"src":"1478:11:117","valueSize":1}],"flags":["memory-safe"],"id":103442,"nodeType":"InlineAssembly","src":"1324:325:117"}]},"documentation":{"id":103435,"nodeType":"StructuredDocumentation","src":"552:665:117","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:117","parameters":{"id":103438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103437,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:117","nodeType":"VariableDeclaration","scope":103444,"src":"1254:19:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:117"},"returnParameters":{"id":103441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103440,"mutability":"mutable","name":"digest","nameLocation":"1306:6:117","nodeType":"VariableDeclaration","scope":103444,"src":"1298:14:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:117"},"scope":103503,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":103470,"nodeType":"FunctionDefinition","src":"2121:229:117","nodes":[],"body":{"id":103469,"nodeType":"Block","src":"2207:143:117","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":103456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:117","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":103461,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103447,"src":"2316:7:117","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":103462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:117","memberName":"length","nodeType":"MemberAccess","src":"2316:14:117","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":103459,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102854,"src":"2299:7:117","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$102854_$","typeString":"type(library Strings)"}},"id":103460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:117","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":101732,"src":"2299:16:117","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":103463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:117","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":103458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:117","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":103457,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:117","typeDescriptions":{}}},"id":103464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:117","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":103465,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103447,"src":"2334:7:117","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":103454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:117","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":103453,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:117","typeDescriptions":{}}},"id":103455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:117","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:117","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":103466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:117","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":103452,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:117","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":103467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:117","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":103451,"id":103468,"nodeType":"Return","src":"2217:126:117"}]},"documentation":{"id":103445,"nodeType":"StructuredDocumentation","src":"1661:455:117","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:117","parameters":{"id":103448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103447,"mutability":"mutable","name":"message","nameLocation":"2166:7:117","nodeType":"VariableDeclaration","scope":103470,"src":"2153:20:117","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103446,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:117","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:117"},"returnParameters":{"id":103451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103470,"src":"2198:7:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:117"},"scope":103503,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":103490,"nodeType":"FunctionDefinition","src":"2693:191:117","nodes":[],"body":{"id":103489,"nodeType":"Block","src":"2804:80:117","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":103483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:117","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":103484,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103473,"src":"2860:9:117","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":103485,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103475,"src":"2871:4:117","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":103481,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:117","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":103482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:117","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:117","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":103486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:117","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":103480,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:117","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":103487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:117","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":103479,"id":103488,"nodeType":"Return","src":"2814:63:117"}]},"documentation":{"id":103471,"nodeType":"StructuredDocumentation","src":"2356:332:117","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:117","parameters":{"id":103476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103473,"mutability":"mutable","name":"validator","nameLocation":"2742:9:117","nodeType":"VariableDeclaration","scope":103490,"src":"2734:17:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":103472,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:117","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103475,"mutability":"mutable","name":"data","nameLocation":"2766:4:117","nodeType":"VariableDeclaration","scope":103490,"src":"2753:17:117","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":103474,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:117","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:117"},"returnParameters":{"id":103479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":103490,"src":"2795:7:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:117"},"scope":103503,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":103502,"nodeType":"FunctionDefinition","src":"3326:374:117","nodes":[],"body":{"id":103501,"nodeType":"Block","src":"3435:265:117","nodes":[],"statements":[{"AST":{"nativeSrc":"3470:224:117","nodeType":"YulBlock","src":"3470:224:117","statements":[{"nativeSrc":"3484:22:117","nodeType":"YulVariableDeclaration","src":"3484:22:117","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:117","nodeType":"YulLiteral","src":"3501:4:117","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:117","nodeType":"YulIdentifier","src":"3495:5:117"},"nativeSrc":"3495:11:117","nodeType":"YulFunctionCall","src":"3495:11:117"},"variables":[{"name":"ptr","nativeSrc":"3488:3:117","nodeType":"YulTypedName","src":"3488:3:117","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:117","nodeType":"YulIdentifier","src":"3526:3:117"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:117","nodeType":"YulLiteral","src":"3531:10:117","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:117","nodeType":"YulIdentifier","src":"3519:6:117"},"nativeSrc":"3519:23:117","nodeType":"YulFunctionCall","src":"3519:23:117"},"nativeSrc":"3519:23:117","nodeType":"YulExpressionStatement","src":"3519:23:117"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:117","nodeType":"YulIdentifier","src":"3566:3:117"},{"kind":"number","nativeSrc":"3571:4:117","nodeType":"YulLiteral","src":"3571:4:117","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:117","nodeType":"YulIdentifier","src":"3562:3:117"},"nativeSrc":"3562:14:117","nodeType":"YulFunctionCall","src":"3562:14:117"},{"name":"domainSeparator","nativeSrc":"3578:15:117","nodeType":"YulIdentifier","src":"3578:15:117"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:117","nodeType":"YulIdentifier","src":"3555:6:117"},"nativeSrc":"3555:39:117","nodeType":"YulFunctionCall","src":"3555:39:117"},"nativeSrc":"3555:39:117","nodeType":"YulExpressionStatement","src":"3555:39:117"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:117","nodeType":"YulIdentifier","src":"3618:3:117"},{"kind":"number","nativeSrc":"3623:4:117","nodeType":"YulLiteral","src":"3623:4:117","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:117","nodeType":"YulIdentifier","src":"3614:3:117"},"nativeSrc":"3614:14:117","nodeType":"YulFunctionCall","src":"3614:14:117"},{"name":"structHash","nativeSrc":"3630:10:117","nodeType":"YulIdentifier","src":"3630:10:117"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:117","nodeType":"YulIdentifier","src":"3607:6:117"},"nativeSrc":"3607:34:117","nodeType":"YulFunctionCall","src":"3607:34:117"},"nativeSrc":"3607:34:117","nodeType":"YulExpressionStatement","src":"3607:34:117"},{"nativeSrc":"3654:30:117","nodeType":"YulAssignment","src":"3654:30:117","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:117","nodeType":"YulIdentifier","src":"3674:3:117"},{"kind":"number","nativeSrc":"3679:4:117","nodeType":"YulLiteral","src":"3679:4:117","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:117","nodeType":"YulIdentifier","src":"3664:9:117"},"nativeSrc":"3664:20:117","nodeType":"YulFunctionCall","src":"3664:20:117"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:117","nodeType":"YulIdentifier","src":"3654:6:117"}]}]},"evmVersion":"shanghai","externalReferences":[{"declaration":103498,"isOffset":false,"isSlot":false,"src":"3654:6:117","valueSize":1},{"declaration":103493,"isOffset":false,"isSlot":false,"src":"3578:15:117","valueSize":1},{"declaration":103495,"isOffset":false,"isSlot":false,"src":"3630:10:117","valueSize":1}],"flags":["memory-safe"],"id":103500,"nodeType":"InlineAssembly","src":"3445:249:117"}]},"documentation":{"id":103491,"nodeType":"StructuredDocumentation","src":"2890:431:117","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:117","parameters":{"id":103496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103493,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:117","nodeType":"VariableDeclaration","scope":103502,"src":"3351:23:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":103495,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:117","nodeType":"VariableDeclaration","scope":103502,"src":"3376:18:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:117"},"returnParameters":{"id":103499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":103498,"mutability":"mutable","name":"digest","nameLocation":"3427:6:117","nodeType":"VariableDeclaration","scope":103502,"src":"3419:14:117","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":103497,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:117","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:117"},"scope":103503,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":103434,"nodeType":"StructuredDocumentation","src":"190:330:117","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[103503],"name":"MessageHashUtils","nameLocation":"529:16:117","scope":103504,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":117}