{"abi":[{"type":"function","name":"SEND_EARN","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"VAULT","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"affiliates","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"createAndDeposit","inputs":[{"name":"referrer","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"assets","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"sendEarn","type":"address","internalType":"contract ISendEarn"},{"name":"shares","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSendEarn","inputs":[{"name":"referrer","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"sendEarn","type":"address","internalType":"contract ISendEarn"}],"stateMutability":"nonpayable"},{"type":"function","name":"deposits","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"fee","inputs":[],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"initialBurn","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isSendEarn","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setDeposit","inputs":[{"name":"vault","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setFee","inputs":[{"name":"newFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSplit","inputs":[{"name":"newSplit","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"withdrawPrefund","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"SEND_EARN()":"7e9ae0d1","VAULT()":"411557d1","affiliates(address)":"4f51e294","createAndDeposit(address,bytes32,uint256)":"b473b00b","createSendEarn(address,bytes32)":"3e6f4022","deposits(address)":"fc7e286d","fee()":"ddca3f43","initialBurn()":"94fc32a0","isSendEarn(address)":"464d225a","setDeposit(address)":"3b80938e","setFee(uint256)":"69fe0e2d","setSplit(uint256)":"674e694f","split()":"f7654176","withdrawPrefund(address,uint256)":"190cb71c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SEND_EARN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VAULT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"affiliates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"createAndDeposit\",\"outputs\":[{\"internalType\":\"contract ISendEarn\",\"name\":\"sendEarn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"createSendEarn\",\"outputs\":[{\"internalType\":\"contract ISendEarn\",\"name\":\"sendEarn\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isSendEarn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"setDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSplit\",\"type\":\"uint256\"}],\"name\":\"setSplit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"split\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPrefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndDeposit(address,bytes32,uint256)\":{\"params\":{\"assets\":\"The amount of assets to deposit.\",\"referrer\":\"The address of the referrer. Passing address(0) will use the default SendEarn vault.\",\"salt\":\"The salt to use for the SendEarn vault's CREATE2 address.\"},\"returns\":{\"sendEarn\":\"The created SendEarn vault.\",\"shares\":\"The amount of shares received from the deposit.\"}},\"createSendEarn(address,bytes32)\":{\"params\":{\"referrer\":\"The address of the referrer. Passing address(0) will use the default SendEarn vault.\",\"salt\":\"The salt to use for the SendEarn vault's CREATE2 address.\"}},\"setDeposit(address)\":{\"params\":{\"vault\":\"The address of the vault to set. MUST be a known SendEarn vault. Use isSendEarn to check.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"SEND_EARN()\":{\"notice\":\"The default SendEarn vault created with the factory. This vault does not have a referrer.\"},\"VAULT()\":{\"notice\":\"The underlying vault that SendEarn vaults uses.\"},\"affiliates(address)\":{\"notice\":\"Tracks existing SendEarn contracts where the affiliate is sharing the fees.\"},\"createAndDeposit(address,bytes32,uint256)\":{\"notice\":\"Creates a new SendEarn vault with a referrer and deposits assets into it.\"},\"createSendEarn(address,bytes32)\":{\"notice\":\"Creates a new SendEarn vault with a referrer.\"},\"deposits(address)\":{\"notice\":\"Tracks which SendEarn contract a user is depositing into.\"},\"fee()\":{\"notice\":\"The current fee\"},\"initialBurn()\":{\"notice\":\"The amount of underlying asset to deposit and burn upon vault creation.\"},\"isSendEarn(address)\":{\"notice\":\"Whether a SendEarn vault was created with the factory.\"},\"setDeposit(address)\":{\"notice\":\"Sets the deposit vault for a user.\"},\"setFee(uint256)\":{\"notice\":\"Sets the fee\"},\"setSplit(uint256)\":{\"notice\":\"Sets the split to the referrer.\"},\"split()\":{\"notice\":\"The current split for the platform\"},\"withdrawPrefund(address,uint256)\":{\"notice\":\"Withdraws the burn prefund amount to the owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISendEarnFactory.sol\":\"ISendEarnFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/metamorpho/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":metamorpho-test/=lib/metamorpho/test/forge/\",\":metamorpho/=lib/metamorpho/src/\",\":morpho-blue/=lib/metamorpho/lib/morpho-blue/src/\",\":murky/=lib/metamorpho/lib/universal-rewards-distributor/lib/murky/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/metamorpho/lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/\",\":universal-rewards-distributor/=lib/metamorpho/lib/universal-rewards-distributor/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1\",\"dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"src/interfaces/IFeeConfig.sol\":{\"keccak256\":\"0x0d1ac826c50ca700aed5e1d26b3e8d60ba41c223502075d683b8b7ce1a1a8c06\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5dad09967ee9ce8ae6287ba49afc1d411441e11463f8e98efb969e04c8c7ccef\",\"dweb:/ipfs/QmSzwkpfJVByhtqzg6byRqAPoTNMBcdpVQrsW8ES4MMQMR\"]},\"src/interfaces/IOwnable.sol\":{\"keccak256\":\"0xfa62c4c1d0936b919797b14cf6221e9666d37de5e6ea249374fca92533604a2d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://87c12154dae113dd2243c9bfbb89f33a2b374ea776f89121a844d185fa7f8867\",\"dweb:/ipfs/Qmf6T8UtAk8oHcB479pqjsGkCjh5JAZNqeda8zVoXCTjyQ\"]},\"src/interfaces/ISendEarn.sol\":{\"keccak256\":\"0x1815b04e98b4abc51c6d5290c689ac6b66b67eae66e3dfb3755097f1f8b0287f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0fe274bb51e564d55ac817fdee5f5a7eb60bcd58f2883c15cfb74854d10de992\",\"dweb:/ipfs/QmXP22na9D9m6s5SsUiUmmJMoGnchQwDizVAgLEqRETV9M\"]},\"src/interfaces/ISendEarnFactory.sol\":{\"keccak256\":\"0x774532cc9a8584122c6eaa316d39fe7d7925ea4b8f2cc718c002218bf43446d7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://effa01596fb0acc83e5de82410da2b63da0b5bda1e779f8ce4b1ae82e522a050\",\"dweb:/ipfs/QmWG2xYj1qifU6Yy7DqyEiF66rzd9hR7Z5yHtDgXx2JUqk\"]},\"src/interfaces/ISplitConfig.sol\":{\"keccak256\":\"0xed7cf9d9169bb6b28e64cb68e9dc3f53c1fae84f25e2ace1ab797cf8381abce5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://628db046081f732ab98024c99f98296cee746ce98387c22dc2934fe8b86d35cb\",\"dweb:/ipfs/QmZWuWBX58BaUp6ZBa2M9a6yaW4qn2m6fPLs7fsEocZnvH\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.21+commit.d9974bed"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"SEND_EARN","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"VAULT","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"affiliates","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"referrer","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createAndDeposit","outputs":[{"internalType":"contract ISendEarn","name":"sendEarn","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"referrer","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSendEarn","outputs":[{"internalType":"contract ISendEarn","name":"sendEarn","type":"address"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"deposits","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"fee","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"initialBurn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"view","type":"function","name":"isSendEarn","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"vault","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setDeposit"},{"inputs":[{"internalType":"uint256","name":"newFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setFee"},{"inputs":[{"internalType":"uint256","name":"newSplit","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setSplit"},{"inputs":[],"stateMutability":"view","type":"function","name":"split","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawPrefund"}],"devdoc":{"kind":"dev","methods":{"createAndDeposit(address,bytes32,uint256)":{"params":{"assets":"The amount of assets to deposit.","referrer":"The address of the referrer. Passing address(0) will use the default SendEarn vault.","salt":"The salt to use for the SendEarn vault's CREATE2 address."},"returns":{"sendEarn":"The created SendEarn vault.","shares":"The amount of shares received from the deposit."}},"createSendEarn(address,bytes32)":{"params":{"referrer":"The address of the referrer. Passing address(0) will use the default SendEarn vault.","salt":"The salt to use for the SendEarn vault's CREATE2 address."}},"setDeposit(address)":{"params":{"vault":"The address of the vault to set. MUST be a known SendEarn vault. Use isSendEarn to check."}}},"version":1},"userdoc":{"kind":"user","methods":{"SEND_EARN()":{"notice":"The default SendEarn vault created with the factory. This vault does not have a referrer."},"VAULT()":{"notice":"The underlying vault that SendEarn vaults uses."},"affiliates(address)":{"notice":"Tracks existing SendEarn contracts where the affiliate is sharing the fees."},"createAndDeposit(address,bytes32,uint256)":{"notice":"Creates a new SendEarn vault with a referrer and deposits assets into it."},"createSendEarn(address,bytes32)":{"notice":"Creates a new SendEarn vault with a referrer."},"deposits(address)":{"notice":"Tracks which SendEarn contract a user is depositing into."},"fee()":{"notice":"The current fee"},"initialBurn()":{"notice":"The amount of underlying asset to deposit and burn upon vault creation."},"isSendEarn(address)":{"notice":"Whether a SendEarn vault was created with the factory."},"setDeposit(address)":{"notice":"Sets the deposit vault for a user."},"setFee(uint256)":{"notice":"Sets the fee"},"setSplit(uint256)":{"notice":"Sets the split to the referrer."},"split()":{"notice":"The current split for the platform"},"withdrawPrefund(address,uint256)":{"notice":"Withdraws the burn prefund amount to the owner."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/metamorpho/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/metamorpho/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","metamorpho-test/=lib/metamorpho/test/forge/","metamorpho/=lib/metamorpho/src/","morpho-blue/=lib/metamorpho/lib/morpho-blue/src/","murky/=lib/metamorpho/lib/universal-rewards-distributor/lib/murky/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","openzeppelin/=lib/metamorpho/lib/universal-rewards-distributor/lib/openzeppelin-contracts/contracts/","universal-rewards-distributor/=lib/metamorpho/lib/universal-rewards-distributor/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/ISendEarnFactory.sol":"ISendEarnFactory"},"evmVersion":"shanghai","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/interfaces/IERC4626.sol":{"keccak256":"0x666c704c58d4cf404eecd6e4a898a87e25b00b45416678de914e160582c3ff17","urls":["bzz-raw://6def3cc823ae3f155da28a241a8ff91538222053ed9d78f415758a9133e211a1","dweb:/ipfs/QmSriniszojh4UP4WQqxCJhq2XsbCAULcB4qRij4EYw9Gi"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7","urls":["bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db","dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330","urls":["bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf","dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol":{"keccak256":"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6","urls":["bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3","dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG"],"license":"MIT"},"src/interfaces/IFeeConfig.sol":{"keccak256":"0x0d1ac826c50ca700aed5e1d26b3e8d60ba41c223502075d683b8b7ce1a1a8c06","urls":["bzz-raw://5dad09967ee9ce8ae6287ba49afc1d411441e11463f8e98efb969e04c8c7ccef","dweb:/ipfs/QmSzwkpfJVByhtqzg6byRqAPoTNMBcdpVQrsW8ES4MMQMR"],"license":"GPL-2.0-or-later"},"src/interfaces/IOwnable.sol":{"keccak256":"0xfa62c4c1d0936b919797b14cf6221e9666d37de5e6ea249374fca92533604a2d","urls":["bzz-raw://87c12154dae113dd2243c9bfbb89f33a2b374ea776f89121a844d185fa7f8867","dweb:/ipfs/Qmf6T8UtAk8oHcB479pqjsGkCjh5JAZNqeda8zVoXCTjyQ"],"license":"GPL-2.0-or-later"},"src/interfaces/ISendEarn.sol":{"keccak256":"0x1815b04e98b4abc51c6d5290c689ac6b66b67eae66e3dfb3755097f1f8b0287f","urls":["bzz-raw://0fe274bb51e564d55ac817fdee5f5a7eb60bcd58f2883c15cfb74854d10de992","dweb:/ipfs/QmXP22na9D9m6s5SsUiUmmJMoGnchQwDizVAgLEqRETV9M"],"license":"GPL-2.0-or-later"},"src/interfaces/ISendEarnFactory.sol":{"keccak256":"0x774532cc9a8584122c6eaa316d39fe7d7925ea4b8f2cc718c002218bf43446d7","urls":["bzz-raw://effa01596fb0acc83e5de82410da2b63da0b5bda1e779f8ce4b1ae82e522a050","dweb:/ipfs/QmWG2xYj1qifU6Yy7DqyEiF66rzd9hR7Z5yHtDgXx2JUqk"],"license":"GPL-2.0-or-later"},"src/interfaces/ISplitConfig.sol":{"keccak256":"0xed7cf9d9169bb6b28e64cb68e9dc3f53c1fae84f25e2ace1ab797cf8381abce5","urls":["bzz-raw://628db046081f732ab98024c99f98296cee746ce98387c22dc2934fe8b86d35cb","dweb:/ipfs/QmZWuWBX58BaUp6ZBa2M9a6yaW4qn2m6fPLs7fsEocZnvH"],"license":"GPL-2.0-or-later"}},"version":1},"id":126}